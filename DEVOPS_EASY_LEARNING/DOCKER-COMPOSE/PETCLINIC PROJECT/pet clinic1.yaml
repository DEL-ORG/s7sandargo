version: '3.1'

services:
  petclinic:
    build:
      context: .
      dockerfile: Dockerfile.multi
    environment:
      - SERVER_PORT=8080
      - MYSQL_URL=jdbc:mysql://mysqlserver/petclinic
    volumes:
      - data:/app
    ports:
      - 8001:8000
      - 8081:8080
    networks:
      - s7
    depends_on:
      - redis-0
      - mysqlserver

  mysqlserver:
    image: mysql:8
    environment:
      - MYSQL_ROOT_PASSWORD=
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
      - MYSQL_USER=petclinic
      - MYSQL_PASSWORD=petclinic
      - MYSQL_DATABASE=petclinic
    volumes:
      - mysql_config:/etc/mysql/conf.d
    networks:
      - s7

  redis-0:
    image: redis:4.0.2
    volumes:
      - redis-0:/etc/redis/redis.conf
    networks:
      - s7
    depends_on:
      - sentinel-0

  redis-1:
    image: redis:4.0.2
    volumes:
      - redis-1:/etc/redis/redis.conf
    command: redis-server /etc/redis/redis.conf
    networks:
      - s7

  redis-2:
    image: redis:4.0.2
    volumes:
      - redis-2:/etc/redis/redis.conf
    command: redis-server /etc/redis/redis.conf
    networks:
      - s7

  sentinel-0:
    image: redis:4.0.2
    volumes:
      - sentinel-0:/etc/redis/sentinel.conf
    networks:
      - s7

  sentinel-1:
    image: redis:4.0.2
    volumes:
      - sentinel-1:/etc/redis/sentinel.conf
    command: redis-sentinel /etc/redis/sentinel.conf
    networks:
      - s7

  sentinel-2: 
    image: redis:4.0.2
    volumes:
      - sentinel-2:/etc/redis/sentinel.conf
    command: redis-sentinel /etc/redis/sentinel.conf
    networks:
      - s7

networks:
  s7:
    driver: bridge

volumes:
  data:
  mysql_config:
  redis-0:
  redis-1:
  redis-2:
  sentinel-0:
  sentinel-1:
  sentinel-2:




